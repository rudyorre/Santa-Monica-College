//    file: count_up.hla
//    name: Rudy Orre
// section: 1770
//    date: 4/3/21
// purpose: print out pattern from 1 to n, 2 to n-1, ... until lower and upper equal
//   input: n, which will determine the length of the pattern
//  output: pattern of 1 to n, 2 to n-1, 3 to n-2, ...

program count_up;

#include ( "stdlib.hhf" );
static
n : int8;
i : int8;
j : int8;
limit : int8;

begin count_up;

stdout.put ( "Gimme a decimal value to use as n: ");
stdin.get ( n );

// output
stdout.put ( "Here's your number: " );

// loop algorithm:
// first for-loop will loop from numbers


// first loop start
fl1:
fl1_init:
mov ( 1, BL ); // initialize 1st incrementor to 1
fl1_test:
cmp ( BL, n );
jge fl1_done; // 1st incrementor is greater than or equal to n, end loop
fl1_body:

// second loop start
fl2:
fl2_init:
mov ( BL, CL ); // initialize 2nd incrementor to 1st
fl2_test:
mov ( n, DL );
add ( 1, DL );
sub ( BL, DL );
cmp ( CL, DL ); // DL = n - 1st incrementor + 1
jg fl2_done;
fl2_body:

stdout.puti8 ( CL );

// second loop incrementor
inc ( CL );
jmp fl2_test;
fl2_done:

// first loop incrementor
inc ( BL );
jmp fl1_test;
fl1_done:

end count_up;
