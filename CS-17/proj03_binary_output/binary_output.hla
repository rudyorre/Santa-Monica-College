//    file: binary_output.hla
//    name: Rudy Orre
// section: 1770
//    date: 3/28/21
// purpose: output the binary representation of 8-bit integer
//   input: single 8-bit integer
//  output: integer and its binary representation

program binary_output;

#include( "stdlib.hhf" );
static
input_value : int8 := 0;

begin binary_output;

// prompt user for integ
stdout.put( "Gimme a decimal value to print: ");
stdin.get( input_value );

// output
stdout.put( input_value, " is ");

// print bit 7
SHL( 1, input_value );
lahf();
and( %0000_0001, AH );
stdout.puti8( AH );

// print bit 6
SHL( 1, input_value );
lahf();
and( %0000_0001, AH );
stdout.puti8( AH );

// print bit 5
SHL( 1, input_value );
lahf();
and( %0000_0001, AH );
stdout.puti8( AH );

// print bit 4
SHL( 1, input_value );
lahf();
and( %0000_0001, AH );
stdout.puti8( AH );

stdout.put( "_" );

// print bit 3
SHL( 1, input_value );
lahf();
and( %0000_0001, AH );
stdout.puti8( AH );

// print bit 2
SHL( 1, input_value );
lahf();
and( %0000_0001, AH );
stdout.puti8( AH );

// print bit 1
SHL( 1, input_value );
lahf();
and( %0000_0001, AH );
stdout.puti8( AH );

// print bit 0
SHL( 1, input_value );
lahf();
and( %0000_0001, AH );
stdout.puti8( AH );

end binary_output;
