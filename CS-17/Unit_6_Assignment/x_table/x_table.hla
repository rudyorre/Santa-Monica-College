//    file: x_table.hla
//    name: Rudy Orre
// section: 1770
//    date: 3/20/21
// purpose: to create a 5x5 x-shaped pattern of the inputted number 
//   input: single integer value        
//  output: 5x5 grid of integers

// example program:
// Gimme a starting value: 15
// 15 16 17 18 15
// 19 15 20 15 21
// 22 23 15 24 25
// 26 15 27 15 28
// 15 29 30 31 15

program x_table;
#include( "stdlib.hhf" );

static
start_value : int32 := 0;
increment_value : int32 := 0;

begin x_table;
// prompt user for starting value
stdout.put( "Gimme a starting value: " );
stdin.get( start_value );
mov( start_value, increment_value );

stdout.put( "start_value: ", start_value, nl );
stdout.put( "increment_value: ", increment_value, nl );

// print line 1 (n n+1 n+2 n+3 n)
stdout.put( start_value, " " ); // print n
add(1, increment_value ); // increment to n+1
stdout.put( increment_value, " " ); // print n+1
add(1, increment_value ); // increment to n+2
stdout.put( increment_value, " " ); // print n+2
add(1, increment_value ); // increment to n+3
stdout.put( increment_value, " " ); // print n+3
stdout.put( start_value, nl ); // print n

// print line 2 (n+4 n n+5 n n+6)
add(1, increment_value ); // increment to n+4
stdout.put( increment_value, " " ); // print n+4
stdout.put( start_value, " " ); // print n
add(1, increment_value ); // increment to n+5
stdout.put( increment_value, " " ); // print n+5
stdout.put( start_value, " " ); // print n
add(1, increment_value ); // increment to n+6
stdout.put( increment_value, " ", nl ); // print n+6

// print line 3 (n+7 n+8 n n+9 n+10)
add(1, increment_value ); // increment to n+7
stdout.put( increment_value, " " ); // print n+7
add(1, increment_value ); // increment to n+8
stdout.put( increment_value, " " ); // print n+8
stdout.put( start_value, " " ); // print n
add(1, increment_value ); // increment to n+9
stdout.put( increment_value, " " ); // print n+9
add(1, increment_value ); // increment to n+10
stdout.put( increment_value, " ", nl ); // print n+10

// print line 4 (n+11 n n+12 n n+13) (copied code from "print line 2")
add(1, increment_value ); // increment to n+11
stdout.put( increment_value, " " ); // print n+11
stdout.put( start_value, " " ); // print n
add(1, increment_value ); // increment to n+12
stdout.put( increment_value, " " ); // print n+12
stdout.put( start_value, " " ); // print n
add(1, increment_value ); // increment to n+13
stdout.put( increment_value, " ", nl ); // print n+13

// print line 5 (n n+14 n+15 n+16 n) (copied code from "print line 1")
stdout.put( start_value, " " ); // print n
add(1, increment_value ); // increment to n+14
stdout.put( increment_value, " " ); // print n+14
add(1, increment_value ); // increment to n+15
stdout.put( increment_value, " " ); // print n+15
add(1, increment_value ); // increment to n+16
stdout.put( increment_value, " " ); // print n+16
stdout.put( start_value, nl ); // print n

// functions or loops would be pretty great at this point :-)

end x_table;